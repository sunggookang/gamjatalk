{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/GTalk.js","components/Factory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","GTalk","gObj","isOwner","userObj","editing","setEditing","text","newtalk","setNewtalk","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","displayName","dayjs","createdAt","format","src","faTrash","faPencilAlt","Factory","talk","setTalk","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","talkObj","Date","now","creatorId","collection","add","console","log","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","GamjaTalk","SetGamjaTalk","useEffect","orderBy","onSnapshot","snapshot","talkArray","docs","map","data","marginTop","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","utoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89ccc2d0.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const { target: { name, value } } = event;\r\n        if (name === 'email') {\r\n            setEmail(value)\r\n        } else if (name === 'password') {\r\n            setPassword(value)\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                //create account\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, password\r\n                )\r\n            } else {\r\n                // login\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, password\r\n                )\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\"\r\n                    type=\"email\" placeholder='Email' required value={email}\r\n                    onChange={onChange} className=\"authInput\" />\r\n                <input name=\"password\" type=\"password\" placeholder='Password'\r\n                    required value={password} className=\"authInput\" onChange={onChange} />\r\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Sign In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const { target: { name } } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService, authService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst GTalk = ({ gObj, isOwner, userObj }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newtalk, setNewtalk] = useState(gObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you wanto to delete this talk?\");\r\n        if (ok) {\r\n            await dbService.doc(`GamjaTalk/${gObj.id}`).delete();\r\n            await storageService.refFromURL(gObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`GamjaTalk/${gObj.id}`).update({\r\n            text: newtalk\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewtalk(value);\r\n    }\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                    <>\r\n                        {isOwner &&\r\n                            (<>\r\n                                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                                    <input type=\"text\" placeholder=\"Edit your talk\" value={newtalk} required autoFocus onChange={onChange} className=\"formInput\" />\r\n                                    <input type=\"submit\" value=\"Update Talk\" className=\"formBtn\" />\r\n                                </form>\r\n                                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                                    Cancel\r\n                                </span>\r\n                            </>\r\n                            )}\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"talker\">From {gObj.displayName}</div>\r\n                        <div className=\"talk\">\r\n                            <h4>{gObj.text}</h4>\r\n                        </div>\r\n                        <div className=\"date\">{dayjs(gObj.createdAt).format(\"YYYY-MM-DD HH:mm:ss\")}</div>\r\n                        {gObj.attachmentUrl && <img src={gObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div className=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick} className=\"trash\">\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GTalk;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Factory = ({ userObj }) => {\r\n    const [talk, setTalk] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (talk === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const talkObj = {\r\n            text: talk,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n            displayName: userObj.displayName\r\n        }\r\n        await dbService.collection(\"GamjaTalk\").add(talkObj);\r\n        setTalk(\"\");\r\n        setAttachment(\"\");\r\n        console.log(userObj);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setTalk(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const { target: { files } } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result } } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={talk}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }} />\r\n            {attachment && (<div className=\"factoryForm__attachment\">\r\n                <img\r\n                    src={attachment}\r\n                    style={{\r\n                        backgroundImage: attachment,\r\n                    }}\r\n                />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n            </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Factory;","import GTalk from \"components/GTalk\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Factory from \"components/Factory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [GamjaTalk, SetGamjaTalk] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"GamjaTalk\").orderBy(\"createdAt\", \"desc\").onSnapshot((snapshot) => {\r\n            const talkArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id, ...doc.data(),\r\n            }));\r\n            SetGamjaTalk(talkArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Factory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {GamjaTalk.map((talk) => (\r\n                    <GTalk key={talk.id} gObj={talk} isOwner={talk.creatorId === userObj.uid} userObj={userObj} />\r\n                ))}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default Home;","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value }, } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input onChange={onChange} type=\"text\" utoFocus placeholder=\"Display name\" value={newDisplayName} className=\"formInput\" />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n                to=\"/profile\"\r\n                style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}\r\n            >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n\r\n</nav>\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, [])\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}